apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'groovy' //Groovyを使うときは必要
apply plugin: "sonar-runner" //sonarを使うときは必要

defaultTasks 'run'

//ant.importBuild 'build.xml'
ant.importBuild('build.xml') { antTargetName ->
    'a--' + antTargetName
}
//こうすると、Antにプロパティの値を渡すことも可能。
ant.properties.demoProperty = "this is property value from gradle"
//これは、build.xmlの値
println ant.antProp

println 'これはFIRSTプロジェクトです。'
description = "これはFIRSTプロジェクトです"

repositories {
    mavenCentral()
}
dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'org.codehaus.groovy:groovy-all:2.3.10'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile "org.codehaus.groovy:groovy:2.3.10"
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}


//--------------------------------------
task hello{
  ext.greeting = 'こんにちわ'
 doLast{

  println 'Hellxxxxlererrelllo'
  }
}

task antHello << {
    String greeting = 'hello from Ant'
    ant.echo(message: greeting)
}

task first (dependsOn:'upper')<< {
	println 'first task des'
}

task upper << {
	String str = 'nagase'
	println 'this is '+ str
	println 'upper ' + str.toUpperCase()

}
task count(dependsOn: hello)<< {
	10.times{
	println "this is $it times" 
	}
	println "I got value from hello $hello.greeting"
}

hello.doFirst{
	println "this is hello.dofirst $greeting"
}

task loadfile << {
	println 'start loadfile'
    def files = file('../hajirest3/hajirest4').listFiles().sort()
    files.each { File file ->
        if (file.isFile()) {
        	//ここでAntタスクを呼び出している。
            ant.loadfile(srcFile: file, property: file.name)
            println " *** $file.name ***"
          // println "${ant.properties[file.name]}"
        }
    }
}
task distribution<<{
	println "We build the zip with version=$version"
}
task release(dependsOn: 'distribution') <<{
	println 'We release now'
}



task run<< {
	println "Runタスク"
}

gradle.taskGraph.whenReady{
	taskGraph ->
	//println 'ここで、タスクになにが含まれているかで、変数を指定'
	if(taskGraph.hasTask(release)||taskGraph.hasTask(count)){
		version ='1.0'
	}else{
		version = '1.0-SNAPSHOT'
	}
}

task zip << {
    ant.zip(destfile: 'archive.zip') {
        fileset(dir: 'src') {
            include(name: '**/**')
            exclude(name: '**.java')
        }
    }
}

